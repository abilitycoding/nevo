{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ability\\\\Downloads\\\\nevo\\\\nevo-test-frontend\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/vehicles\");\n        setVehicles(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(\"Failed to fetch vehicles\");\n        setLoading(false);\n      }\n    };\n    fetchVehicles();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Welcome to Nevo Test Drive Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: vehicle.vehicleType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Location: \", vehicle.location, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), \"Availability: \", vehicle.isAvailable ? \"Available\" : \"Booked\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, vehicle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"gogqKFQHRH0QRHxrh6n8o+Hep6o=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","Card","jsxDEV","_jsxDEV","HomePage","_s","vehicles","setVehicles","loading","setLoading","error","setError","fetchVehicles","response","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","vehicle","md","Body","Title","vehicleType","Text","location","isAvailable","id","_c","$RefreshReg$"],"sources":["C:/Users/Ability/Downloads/nevo/nevo-test-frontend/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nconst HomePage = () => {\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchVehicles = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/api/vehicles\");\r\n        setVehicles(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch vehicles\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVehicles();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h1 className=\"text-center mb-4\">Welcome to Nevo Test Drive Service</h1>\r\n      <Row>\r\n        {vehicles.map((vehicle) => (\r\n          <Col md={4} key={vehicle.id} className=\"mb-4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{vehicle.vehicleType}</Card.Title>\r\n                <Card.Text>\r\n                  Location: {vehicle.location}\r\n                  <br />\r\n                  Availability: {vehicle.isAvailable ? \"Available\" : \"Booked\"}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}